buildscript {
	ext { springBootVersion = '1.3.2.RELEASE' }
	ext['elasticsearch.version'] = '1.7.4'
	repositories { mavenCentral() }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'jacoco'
apply plugin: 'groovy'

jar {
	baseName = 'springbootes'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

configurations{ compile.exclude module: "spring-boot-starter-tomcat" }

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('org.springframework.boot:spring-boot-devtools')
	compile ('org.codehaus.groovy:groovy-all:2.4.5')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.spockframework:spock-spring:1.0-groovy-2.4')
	testCompile('org.spockframework:spock-core:1.0-groovy-2.4') { exclude(module: 'groovy-all') }
	testRuntime('com.athaydes:spock-reports:1.2.7')
}
jacoco { toolVersion = "0.7.1.201405082137" }

jacocoTestReport{
	reports{
		csv.enabled false;
		xml.enabled false;
		html.enabled true;
		html.destination("${buildDir}/reports/jacoco/html")
	}
	executionData = files('build/jacoco/test.exec')
}

test{
	ignoreFailures true
	finalizedBy jacocoTestReport
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) { gradleVersion = '2.9' }
